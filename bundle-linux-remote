#!/usr/bin/env bash

set -euxo pipefail

target_dir="${CARGO_TARGET_DIR:-target}"

version_info=$(rustc --version --verbose)
host_line=$(echo "$version_info" | grep host)
target_triple=${host_line#*: }
musl_triple=${target_triple%-gnu}-musl
remote_server_triple=${REMOTE_SERVER_TARGET:-"${musl_triple}"}
echo "musl_triple:${musl_triple}"
rustup_installed=false
if command -v rustup >/dev/null 2>&1; then
    rustup_installed=true
fi

if "$rustup_installed"; then
    rustup target add "$remote_server_triple"
fi

# export CC=$(which clang)

# Build binary in release mode
export RUSTFLAGS="${RUSTFLAGS:-} -C link-args=-Wl,--disable-new-dtags,-rpath,\$ORIGIN/../lib"
# Build remote_server in separate invocation to prevent feature unification from other crates
# from influencing dynamic libraries required by it.
if [[ "$remote_server_triple" == "$musl_triple" ]]; then
    export RUSTFLAGS="${RUSTFLAGS:-} -C target-feature=+crt-static"
fi
cargo build --release --target "${remote_server_triple}" --package remote_server

# Strip debug symbols and save them for upload to DigitalOcean
objcopy --strip-debug "${target_dir}/${remote_server_triple}/release/remote_server"

# Ensure that remote_server does not depend on libssl nor libcrypto, as we got rid of these deps.
if ldd "${target_dir}/${remote_server_triple}/release/remote_server" | grep -q 'libcrypto\|libssl'; then
    echo "Error: remote_server still depends on libssl or libcrypto" && exit 1
fi
